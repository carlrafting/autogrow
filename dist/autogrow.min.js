/**
 * @name      autogrow
 * @version   2.1.4
 * @license   MIT
 * @see       <https://carlrafting.com/autogrow/>
 * @see       <https://github.com/carlrafting/autogrow>
 */
function e(e,t={}){if(!e&&""===e)return;const a={areaClass:"autogrow-area",containerClass:"autogrow",mirrorClass:"autogrow-mirror",spanClass:"autogrow-mirror-span",...t};if(!document.querySelector&&!document.addEventListener&&!document.body.classList)return;let n,r;if(e instanceof HTMLTextAreaElement&&(n=e),"string"==typeof e&&(r=e.charAt(0),n="#"===r||"."===r?document.querySelector(e):document.getElementById(e),r=null),!n)return;const{areaClass:o,containerClass:s,mirrorClass:d,spanClass:i}=a,l=document.createDocumentFragment(),c=document.createElement("div"),u=document.createElement("pre"),m=document.createElement("span"),p=document.createElement("br");return n.classList.contains(o)?void 0:(n.classList.add(o),c.classList.add(s),u.classList.add(d),m.classList.add(i),m.textContent=n.value,u.appendChild(m),u.appendChild(p),c.appendChild(u),c.addEventListener("input",(function(e){const t=e.target,a=t.value;t.classList.contains(o)&&(m.textContent=a)})),l.appendChild(c),n.parentNode&&n.parentNode.insertBefore(l,n),c.appendChild(n),n.autofocus&&n.focus(),{container:c,mirror:u,span:m,target:e,element:n})}e.all=function(t){const a=document.getElementsByTagName("textarea"),n=a.length;let r,o;for(var s=0;s<n;s++)o=a[s],r=Math.floor(1e7*Math.random()),o.id&&""!==o.id||(o.id="autogrow-"+r),e(o.id,t)},e.init=e.all,window.autogrow=e,window.a=e;export{e as autogrow,e as default};
